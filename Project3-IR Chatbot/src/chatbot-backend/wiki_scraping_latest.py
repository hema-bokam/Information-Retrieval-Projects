# -*- coding: utf-8 -*-
"""wiki_scraping_latest.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Zo2Y6cB-UYKuPZV8VNwCIQjBSyHZqIGx
"""

!pip install wikipedia

from concurrent.futures import ThreadPoolExecutor, as_completed
import wikipedia
import re
import time

import requests
import re
import wikipedia
import time
from concurrent.futures import ThreadPoolExecutor, as_completed

def remove_extra_characters(text):
    text = re.sub(r'[^a-zA-Z0-9 ]+', '', text)
    text = re.sub(r'\s+', ' ', text).strip()
    return text

def relevance_score(text, keywords):
    return sum(text.lower().count(keyword.lower()) for keyword in keywords)


def process_page_again(title, main_topic, keywords, max_retries=3):
    for attempt in range(max_retries):
        try:
            document, links = scrape_wikipedia_pages(title, main_topic, keywords)
            return document, links
        except Exception as e:
            print(f"Error processing page '{title}' (Attempt {attempt + 1}/{max_retries}): {e}")
            time.sleep(2 ** attempt)
    return None, []

def scrape_wikipedia_pages(title, topic, keywords):
    try:
        content = wikipedia.page(title, auto_suggest=False)
        summary = remove_extra_characters(content.summary)
        document = {
            "revision_id": content.revision_id,
            "title": content.title,
            "url": content.url,
            "summary": summary,
            "topic": topic
        }
        score = relevance_score(summary, keywords) + relevance_score(content.title, keywords)
        document["score"] = score

        if score >= 1:
            return document, content.links
        else:
            return None, []
    except wikipedia.DisambiguationError as e:
        print(f"Disambiguation error for: {title}, options: {e.options[:5]}")
        for option in e.options:
            try:
                return scrape_wikipedia_pages(option, topic, keywords)
            except wikipedia.DisambiguationError:
                continue
            except Exception as inner_e:
                print(f"Error processing disambiguation option '{option}': {inner_e}")
        return None, []
    except wikipedia.PageError:
        print(f"Page not found for: {title}")
        return None, []
    except Exception as e:
        print(f"Unexpected error for: {title} - {e}")
        return None, []


def process_links(page_links, main_topic, keywords, visited, workers):
    link_results = []
    with ThreadPoolExecutor(workers=workers) as executor:
        future_to_link = {executor.submit(process_page_again, link, main_topic, keywords): link for link in page_links}
        for future in as_completed(future_to_link):
            try:
                document, links = future.result()
                if document and document['url'] not in visited:
                    visited.add(document['url'])
                    link_results.append(document)
            except Exception as e:
                print(f"Error processing link: {e}")
    return link_results


def scrape_wikipedia_subtopics(main_topic, sub_topics, keywords, min_docs_per_topic, workers=10, batch_size=100):
    results = []
    visited = set()
    extra_links = []
    print(f"Scraping summaries for main topic: {main_topic}")
    for sub_topic in sub_topics:
        print(f"  Scraping sub-topic: {sub_topic}")
        search_results = wikipedia.search(sub_topic, results=1000)
        for i in range(0, len(search_results), batch_size):
            batch = search_results[i:i + batch_size]
            with ThreadPoolExecutor(workers=workers) as executor:
                future_to_title = {executor.submit(process_page_again, title, main_topic, keywords): title for title in batch}
                for future in as_completed(future_to_title):
                    try:
                        document, links = future.result()
                        if document and document['url'] not in visited:
                            visited.add(document['url'])
                            results.append(document)
                            extra_links.extend(links)
                            if len(results) >= min_docs_per_topic:
                                break
                    except Exception as e:
                        print(f"Error processing page: {e}")

            print(f"total docs scrapped till topic {sub_topic} is : {len(results)}")
            if len(results) >= min_docs_per_topic:
                break

    print(f"total documents scrapped: {len(results)}")
    while len(results) < min_docs_per_topic and extra_links:
        link_batch = extra_links[:batch_size]
        extra_links = extra_links[batch_size:]

        link_results = process_links(link_batch, main_topic, keywords, visited, workers)
        results.extend(link_results)
        if len(results) >= min_docs_per_topic:
            break

    results.sort(key=lambda x: x.get('score', 0), reverse=True)
    for doc in results:
        doc.pop('score', None)

    print(f"Total documents scraped for {main_topic}: {len(results)}")
    return results

topics_list = {
    "Health": [
        "Common diseases", "Infectious diseases", "Mental health trends", "Health care system", "Global Health statistics", "Preventive medicine", "Epidemiology", "covid-19", "skin diseases","obesity",
        "Healthcare technologies", "Medical ethics", "Vaccine development", "Chronic illnesses", "Pediatric health", "Women's health", "Genetic disorders","Anxiety and depression disorders",
        "Public health campaigns","Mental health therapies", "Substance abuse treatment", "cancer treatments and medication", "Healthcare Information","autoimmune disease", "bone health","tumor"
    ],
    "Environment": [
        "Global warming", "Climate Change", "Waste Management", "Greenhouse gases","Deforestation rates", "Endangered species", "Renewable energy technologies","Carbon footprint analysis", "Recycling innovations", "Environmental policies",
        "Biodiversity loss", "Plastic pollution", "Renewable resources management","Climate resilience", "Urban green spaces", "Environmental activism", "Water pollution and contamination",
        "Soil pollution", "Noise pollution in urban areas", "Solar energy advancements", "Environmental education and awareness", "Organic farming practices"
    ],
    "Technology": [
        "Emerging technologies", "AI advancements", "Software Development", "Cloud Computing issues","Computer programming", "Blockchain applications", "Quantum computing", "5G networks",
        "IoT (Internet of Things)", "Cybersecurity trends", "Robotics and automation", "Generative AI","AI in Finance", "Technology in education", "Open source software", "Technology ethics",
        "Autonomous vehicles", "Neural Networks and Deep Learning", "Data Science and Big Data","AI in healthcare", "Reinforcement learning", "Edge computing", "Distributed systems",
        "Ethical hacking", "agile methodologies", "Machine learning algorithms", "online learning platforms"
    ],
    "Economy": [
        "Stock market performance", "Job markets", "Cryptocurrency trends", "Bitcoin trends","Trading strategies", "Currency Exchange rates", "Economic policies", "Financial inclusion",
        "Global economic forums", "Banking systems", "International trade", "Inflation trends", "Unemployment trends", "Blockchain in banking", "Infrastructure financing",
        "Microfinance", "Taxation systems", "Economic impact of pandemics", "Circular economy", "Real estate market trends", "Supply chain economics", "Savings and investment patterns"
    ],
    "Entertainment": [
        "Music industry", "Popular cultural events", "Streaming platforms", "Film industry",
        "Digital media", "Film festivals", "Music genres evolution", "The rise of esports","Comedy shows","Social media influencers", "Children's entertainment","cartoons",
        "Streaming wars", "Celebrity culture", "Indie films", "Influence of social media on entertainment", "Mobile gaming trends","AI-driven personalization in streaming", "Lifestyle blogging and vlogging",
        "Awards shows", "Theme parks", "Broadway and theater", "Animation industry", "Music streaming platforms", "Impact of OTT platforms", "Traditional cultural festivals and entertainment"
    ],
    "Sports": [
        "Major sporting events", "Sports analytics", "Olympic Games", "Cricket test matches","cricket world cup", "FIFA World Cup", "Baseball leagues",
        "Football tournaments", "Paralympics", "Sports medicine", "Fantasy sports","Golf tournaments", "Volleyball championships",
        "Historical Olympic records", "Major league sports", "Women in sports","Gymnastics in the Olympics", "Asian Games","Cycling races",
        "Sports psychology", "Youth sports development", "College athletics", "Sports equipment technology",
        "Virtual sports", "Popular sports brands", "soccer tournaments"
    ],
    "Politics": [
        "Elections", "Public policy analysis", "Political parties","US Presidential elections","Famous US presidents","Role of social media in elections", "Women Leaders in Politics", "Protests and Political Reforms",
        "Political ideologies", "Human rights policies", "Cybersecurity in elections","Voting rights and access","Religion and politics","Economic inequality and political policies","Global politics","world politics", "US foreign policy",
        "Social movements", "International treaties", "Political history", "Parliamentary systems","Youth involvement in politics","Political debates in media","female political leaders",
        "Political scandals", "Democracy vs. autocracy", "Political communication strategies", "Freedom of speech", "Gender equality in politics"
    ],
    "Education": [
        "Literacy","Literacy rates", "Online Certification Courses","Online education trends", "Student loan data", "Higher education","STEM education", "International education systems", "Master of English Literature",
        "Science education", "Education policy", "Innovations in teaching methods", "Role of AI in education","Libraries in education","Famous universities and their impact", "Data Science Programs",
        "Digital classrooms", "Educational games", "Literacy campaigns", "Vocational training","Importance of physical education","Arts education","women in education", "Nursing Education",
        "Scholarships and funding", "Early childhood education", "Teacher training programs","Role of internships and apprenticeships", "online learning platforms", "Business Schools and MBA Programs",
        "Education in developing countries", "Homeschooling trends", "Research and innovation in universities", "Career-oriented education","Library science","Gender equality in education"
    ],
    "Travel": [
        "Top tourist destinations","Airline industry data","Travel trends","International tourism","Luxury travel destinations","Best airlines for international travel",
        "World Tour","Adventure travel","Beach destinations","Travel deals","Business trip","Mountain tourism","Northern Lights destinations","Famous European road trips",
        "Sustainable tourism","Historical landmarks","Space tourism","Travel safety","Best airlines for international travel",
        "Budget travel tips","Seasonal travel patterns","Cultural tourism","Wildlife tourism","Hottest destinations","Sports tourism","National parks in the United States",
        "Ski resorts and snowboarding","Best travel apps","Impact of social media on travel","Travel insurance tips","Winter travel destinations"
    ],
   "Food": [
        "Organic Farming","Crop yield statistics","Global hunger","Food security","Food quality","Common cooking oils","Healthy salad recipes","Different types of pasta","Protein food",
        "Healthy drinks","Healthy food","Fruits","Healthy vegetables","Malnutrition","Dairy products","Common food allergies","Popular snacks and junk food","Most consumed beverages","Global food chains",
        "Fermentation techniques", "Food preservation methods", "Food festivals", "Plant-based food","Food wastage and its impact", "Popular desserts", "Street food cultures", "Beverage industries",
        "Superfoods", "Food allergies and intolerances", "Gluten-free diets", "Zero-waste cooking trends","Lab-grown meat", "Nutrition trends", "Regional cuisines", "Meat alternatives",
        "Food technology advancements", "Food for immunity boosting", "Heart-healthy diets", "Popular salad recipes"
    ]

}


# keywords for each main topic
keywords = {
    "Health": [
      "common health diseases", "common disease", "common diseases", "diseases", "covid-19", "covid19","coronavirus","corona virus","corona", "skin diseases", "obesity","depression", "healthcare system","COVID-19 pandemic deaths",
      "infectious diseases", "health statistics", "global health statistics", "health system", "covid-19 deaths", "tumor", "autoimmune disease", "autoimmune diseases","global health",  "health care system",
      "mental health trends", "preventive medicine", "epidemiology", "public health campaigns", "mental health","healthcare technologies", "medical ethics", "vaccine development", "vaccination programs",
      "chronic illnesses", "chronic diseases", "pediatric health", "children's health","women's health", "maternal health", "genetic disorders", "hereditary diseases","mental health therapies", "therapy for mental health", "substance abuse treatment",
      "addiction recovery", "cancer treatments", "cancer therapies", "cancer medications","Healthcare Information", "healthcare info", "bone health", "Anxiety disorders", "Depression symptoms", "anxitely and depression"
    ],

    "Environment": [
      "global warming", "climate change", "waste management", "endangered species","deforestation", "deforestation rates", "greenhouse gases", "co2", "manage waste", "noise pollution", "urban noise",
      "renewable energy", "renewable energy technologies", "solar energy", "solar power", "wind energy", "carbon footprint", "carbon footprint analysis", "recycling", "soil degradation", "degraded land",
      "recycling innovations", "recycling waste", "environmental policies", "environmental laws", "biodiversity", "biodiversity loss", "plastic pollution", "plastic waste", "microplastics", "renewable resources", "Organic farming trends",
      "renewable resources management", "climate resilience", "urban green spaces", "green spaces in cities", "environmental activism", "eco activism", "water pollution", "water contamination", "polluted water", "soil pollution","Organic farming practices",
      "solar energy advancements", "solar power technologies", "environmental education", "environmental awareness", "sustainability education", "Organic farming", "Chemical-free farming", "Chemical free farming", "Organic crop production","Organic farming techniques"
    ],
    "Technology": [
        "artificial intelligence", "machine learning", "blockchain", "AI advancements", "Artificial Intelligence advancements", "Emerging technologies", "quantum computing",
        "AI trends", "Artificial Intelligence trends", "Web development", "Software development","API", "Cloud computing", "Software engineering", "Computer", "programming",
        "Internet of Things", "IoT", "IoT trends", "5G networks", "5G technology", "Cybersecurity trends", "cybersecurity challenges", "Robotics", "automation",
        "Robotics and automation", "Generative AI", "AI in Finance", "AI in education", "Open source software", "Open source technologies", "Technology ethics",
        "Autonomous vehicles", "self-driving cars", "Neural networks", "Deep learning", "Data science", "Big data", "Big data analytics", "AI in healthcare",
        "Healthcare technology", "Reinforcement learning", "Edge computing", "Distributed systems", "Consensus algorithms", "Ethical hacking",
        "Cybersecurity solutions", "Agile methodologies", "Scrum development","Machine learning algorithms", "Online learning platforms", "e-learning technologies",
        "Virtual learning", "Technology in education", "Generative AI tools","Cloud infrastructure", "API development"
    ],
   "Economy": [
      "stock market performance", "stocks", "stock market", "job", "jobs", "job markets","job market", "recession", "job loss", "trading", "trading strategy", "trading strategies",
      "currency", "currency exchange", "currency exchange rate", "cryptocurrency trends", "cryptocurrency", "Bitcoin", "Bitcoin trends", "economic policies", "financial inclusion",
      "global economic forums", "economic forums", "banking systems", "banks", "international trade", "global trade", "inflation trends", "inflation", "unemployment trends", "unemployment",
      "blockchain in banking", "blockchain technology", "infrastructure financing","microfinance", "micro loans", "taxation systems", "tax policies", "economic impact of pandemics", "pandemic economics",
      "circular economy", "sustainable economy", "real estate market trends", "real estate", "investment patterns", "personal finance", "financial markets",
      "supply chain economics", "supply chain management", "savings", "investment", "savings and investment patterns"
    ],
    "Entertainment": [
        "Music industry", "Music industries", "Music", "Music genres", "Music streaming platforms","Streaming platforms", "online streaming platforms", "OTT platforms", "Impact of OTT platforms",
        "Popular events", "cultural events", "cultural activities", "Popular cultural events", "Netflix", "Amazon Prime video","Hulu", "Film industry", "Film industries",
        "Indie films", "Film festivals", "Broadway and theater","Animation industry", "cartoons", "Children's entertainment", "Comedy shows", "esports",
        "The rise of esports", "Mobile gaming trends", "Gaming", "AI-driven personalization in streaming","Celebrity culture", "Social media influencers", "Influence of social media on entertainment",
        "Digital media", "digital content", "Awards shows", "Theme parks", "Traditional cultural festivals","Traditional entertainment", "Lifestyle blogging", "Lifestyle vlogging", "Lifestyle influencers"
    ],
    "Sports": [
        "sports events", "major sporting events", "sporting events", "sports analytics","Olympic Games", "Olympic sports", "games", "Olympics", "test matches",
        "cricket", "cricket matches", "cricket test matches", "Cricket World Cup","football tournaments", "football", "FIFA World Cup", "soccer", "soccer tournaments",
        "baseball leagues", "baseball", "Paralympics", "sports medicine", "fantasy sports","fantasy leagues", "golf tournaments", "golf", "volleyball championships",
        "volleyball", "historical Olympic records", "major league sports", "women in sports","female athletes", "gymnastics in the Olympics", "gymnastics", "Asian Games",
        "cycling races", "cycling competitions", "sports psychology", "youth sports development", "youth athletes","college athletics", "college sports", "sports equipment technology",
        "sports equipment", "virtual sports", "e-sports", "popular sports brands", "sports brands", "Nike", "Adidas", "Puma", "sports technology", "sports innovation"
    ],
    "Politics": [
        "Elections", "election systems", "voting systems", "electoral processes", "public policy analysis","public policy", "policy analysis", "government policies",
        "trade agreements", "political parties", "political groups", "political affiliations","global politics", "world politics",
        "US Presidential elections", "US elections", "presidential campaigns", "famous US presidents", "US presidents", "historic presidents","political ideologies",
        "liberalism", "conservatism", "socialism", "communism", "human rights policies", "human rights", "humanitarian laws", "cybersecurity in elections",
        "election security", "cybersecurity policies", "voting rights and access", "voter rights", "voting access", "voter suppression", "religion and politics",
        "religious influence on politics", "political religion", "economic inequality and political policies", "economic inequality", "income disparity policies", "US foreign policy",
        "US trade policies", "social movements", "civil rights movements", "political movements", "political protests", "political history","history of politics",
        "political developments", "parliamentary systems", "parliamentary governance", "parliamentary structures", "youth involvement in politics", "politics", "political arguments",
        "youth in government", "young politicians", "political debates in media",  "political debates", "media and politics", "political scandals", "political corruption",
        "scandalous politicians", "democracy vs. autocracy", "democracy", "autocracy", "political communication strategies", "political communication",
        "campaign strategies", "freedom of speech", "free speech","gender equality in politics", "women in politics", "gender balance in government",
        "role of social media in elections", "social media and politics", "online campaigns", "digital politics", "women in politics", "female political leaders", "women presidents", "women prime ministers",
        "famous women politicians", "women in government", "women in parliament", "role of women in politics", "first female president", "first female prime minister",
    ],
    "Education": [
        "Literacy", "Literacy rates", "literacy improvement", "Education policy", "education policies", "Online Certification Courses", "certification programs", "online certification",
        "Online education trends", "online learning trends", "e-learning trends", "digital learning", "online learning platforms", "Student loan data", "student loans", "students loans data",
        "financial aid for students","Higher education", "universities", "colleges", "higher education institutions", "university rankings","STEM education", "STEM learning", "education in STEM",
        "science education", "science literacy","International education systems", "education systems worldwide", "global education systems", "Gender equality in education", "women in education",
        "Innovations in teaching methods", "teaching innovations", "modern teaching methods","Role of AI in education", "AI in classrooms", "artificial intelligence in teaching",
        "Libraries in education", "school libraries", "digital libraries", "Library science", "information science","Famous universities and their impact", "renowned universities", "impactful universities",
         "historic universities","Data Science Programs", "data science in education", "data analysis education", "popular data science courses","Digital classrooms", "virtual classrooms",
        "remote learning classrooms","Educational games", "learning games", "gamification in education","Job-oriented education", "technical education", "career-oriented education",
        "Importance of physical education", "PE in schools", "sports in education","Arts education", "art in schools", "creative education", "fine arts in education",
        "Scholarships and funding", "education scholarships", "student scholarships", "funding for students","Early childhood education", "preschool education", "nursery education",
        "Teacher training programs", "teacher development", "teacher education", "teacher certifications","Role of internships and apprenticeships", "student internships", "career apprenticeships",
        "Mental health in students", "student mental health", "well-being of students","Education in developing countries", "education in low-income nations", "global education challenges",
        "Homeschooling trends", "home education", "home-based learning","Research and innovation in universities", "research in universities", "university research", "academic innovation",
        "Business Schools and MBA Programs", "MBA programs", "business schools", "executive MBA","Nursing Education", "nursing schools", "nursing programs", "healthcare education"
    ],

    "Travel": [
        "Top tourist destinations", "best tourist places", "top tourist places", "tourist destinations", "Airline industry data", "airline data", "airline statistics", "best airlines for international travel",
        "international flights", "Travel trends", "travel statistics", "travel patterns","International tourism", "international travel", "world travel", "Luxury travel destinations",
        "luxury vacations", "luxury holidays", "World tour", "global tour", "Adventure travel", "adventure destinations", "Beach destinations", "beaches",
        "coastal tourism", "Travel deals", "travel discounts", "cheap travel offers", "Business trip", "business travel", "corporate travel", "Mountain tourism", "mountain destinations",
        "famous mountains for travel", "Northern Lights destinations","northern light tours", "Famous European road trips", "road trips in Europe",
        "Sustainable tourism", "Historical landmarks", "famous landmarks","Adventure tourism","Travel safety", "safe travel tips", "travel precautions",
        "Budget travel tips", "cheap travel", "budget-friendly travel", "Seasonal travel patterns", "space travel", "space tourism",
        "best time to travel", "seasonal destinations", "Cultural tourism", "cultural experiences","Wildlife tourism","wildlife reserves",
        "Hottest destinations", "popular travel spots", "trending travel destinations","Sports tourism", "travel for sports events", "famous sports travel destinations",
        "National parks in the United States", "US national parks", "Ski resorts and snowboarding", "ski destinations", "snowboarding places",
        "Best travel apps", "top travel apps", "travel planning apps","Impact of social media on travel", "social media travel trends", "travel influencers",
        "Travel insurance tips", "travel insurance benefits", "insurance for travelers","Winter travel destinations", "cold-weather travel"
    ],
    "Food": [
        "Organic Farming", "Crop yield statistics", "Global hunger", "Food security", "Food quality","Common cooking oils", "Healthy salad recipes", "Different types of pasta", "Protein food",
        "Healthy drinks", "Healthy food", "Fruits", "Healthy vegetables", "Malnutrition", "Dairy products","Common food allergies", "Popular snacks and junk food", "Most consumed beverages", "Global food chains",
        "Fermentation techniques", "Food preservation methods", "Food festivals", "Plant-based food","Food wastage and its impact", "Popular desserts", "Street food cultures", "Beverage industries",
        "Superfoods", "Food allergies and intolerances", "Gluten-free diets", "Zero-waste cooking trends","Lab-grown meat", "Nutrition trends", "Regional cuisines", "Meat alternatives",
        "Food technology advancements", "Food for immunity boosting", "Heart-healthy diets"
    ]
}

total_documents = {}

# Scrap Health data
health_results = scrape_wikipedia_subtopics("Health", topics_list["Health"], keywords["Health"], 5010)
total_documents["Health"] = health_results
print(len(health_results))

environment_results = scrape_wikipedia_subtopics("Environment", topics_list["Environment"], keywords["Environment"], 5010)
total_documents["Environment"] = environment_results
print(len(environment_results))

import json
with open('environment_documents.json', 'w') as json_file:
    json.dump(environment_results, json_file, indent=4)

technology_results = scrape_wikipedia_subtopics("Technology", topics_list["Technology"], keywords["Technology"], 5010)
total_documents["Technology"] = technology_results
print(len(technology_results))

import json
with open('technology_documents.json', 'w') as json_file:
    json.dump(technology_results, json_file, indent=4)

economy_results = scrape_wikipedia_subtopics("Economy", topics_list["Economy"], keywords["Economy"], 5010)
total_documents["Economy"] = economy_results
print(len(economy_results))
with open('economy_documents.json', 'w') as json_file:
    json.dump(economy_results, json_file, indent=4)

entertainment_results = scrape_wikipedia_subtopics("Entertainment", topics_list["Entertainment"], keywords["Entertainment"], 5010)
total_documents["Entertainment"] = entertainment_results
print(len(entertainment_results))

with open('entertainment_documents.json', 'w') as json_file:
    json.dump(entertainment_results, json_file, indent=4)

sports_results = scrape_wikipedia_subtopics("Sports", topics_list["Sports"], keywords["Sports"], 5010)
total_documents["Sports"] = sports_results
print(len(sports_results))
with open('sports_documents.json', 'w') as json_file:
    json.dump(sports_results, json_file, indent=4)

politics_results = scrape_wikipedia_subtopics("Politics", topics_list["Politics"], keywords["Politics"], 5010)
total_documents["Politics"] = politics_results
print(len(politics_results))

import json
with open('politics_documents.json', 'w') as json_file:
    json.dump(politics_results, json_file, indent=4)

education_results = scrape_wikipedia_subtopics("Education", topics_list["Education"], keywords["Education"], 5010)
total_documents["Education"] = education_results
print(len(education_results))

import json
with open('education_documents.json', 'w') as json_file:
    json.dump(education_results, json_file, indent=4)

travel_results = scrape_wikipedia_subtopics("Travel", topics_list["Travel"], keywords["Travel"], 5010)
total_documents["Travel"] = travel_results
print(len(travel_results))

import json
with open('travel_documents.json', 'w') as json_file:
    json.dump(travel_results, json_file, indent=4)

food_results = scrape_wikipedia_subtopics("Food", topics_list["Food"], keywords["Food"], 5010)
total_documents["Food"] = food_results
print(len(food_results))

import json

def merge_json_files(input_files, output_file):
    topic_map = {
        "health": "Health",
        "environment": "Environment",
        "technology": "Technology",
        "economy": "Economy",
        "entertainment": "Entertainment",
        "sports": "Sports",
        "politics": "Politics",
        "education": "Education",
        "travel": "Travel",
        "food": "Food"
    }

    merged_data = {}

    for file_path in input_files:
        file_prefix = file_path.split('/')[-1].split('_')[0]
        topic_name = topic_map.get(file_prefix, None)
        if not topic_name:
            print(f"Warning: Could not determine topic name for file {file_path}. Skipping.")
            continue

        with open(file_path, 'r') as f:
            data = json.load(f)
            if topic_name not in merged_data:
                merged_data[topic_name] = []
            merged_data[topic_name].extend(data[:5010])
    with open(output_file, 'w') as f:
        json.dump(merged_data, f, indent=4)

    total_documents = sum(len(docs) for docs in merged_data.values())
    print(f"Total documents are: {total_documents}")
    print(f"Successfully merged {len(input_files)} JSON files into {output_file}")


def main():
    output_file = 'all_documents.json'
    input_files = [
        './health_documents.json',
        './environment_documents.json',
        './technology_documents.json',
        './economy_documents.json',
        './entertainment_documents.json',
        './sports_documents.json',
        './politics_documents.json',
        './education_documents.json',
        './travel_documents.json',
        './food_documents.json'
    ]

    print(input_files)
    if not input_files:
        print("No JSON files found. Please check the folder path or file pattern.")
        return
    merge_json_files(input_files, output_file)


if __name__ == "__main__":
    main()